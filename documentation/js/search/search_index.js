var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.465,1,1.993]],["body/controllers/AppController.html",[0,2.257,1,3.07,2,1.768,3,0.399,4,0.345,5,0.345,6,3.136,7,0.515,8,1.577,9,4.649,10,1.946,11,0.034,12,0.786,13,3.773,14,1.235,15,1.577,16,0.582,17,0.712,18,2.738,19,3.136,20,0.399,21,0.02,22,1.946,23,2.404,24,1.131,25,3.773,26,0.02,27,0.026,28,0.02]],["title/modules/AppModule.html",[29,1.465,30,1.993]],["body/modules/AppModule.html",[1,2.641,2,1.633,3,0.25,4,0.216,5,0.216,11,0.034,16,0.691,17,0.446,18,2.636,19,1.962,20,0.25,21,0.012,26,0.013,27,0.019,28,0.013,29,1.942,30,3.591,31,1.217,32,1.217,33,1.504,34,1.504,35,1.217,36,2.641,37,1.504,38,1.962,39,1.962,40,1.962,41,2.918,42,2.636,43,2.221,44,1.504,45,1.504,46,2.36,47,2.51,48,2.36,49,1.962,50,2.221,51,3.296,52,3.485,53,2.36,54,1.962,55,1.347,56,1.962,57,2.36,58,2.36,59,1.962,60,1.962,61,1.962,62,2.36,63,3.485,64,3.485,65,3.485,66,2.36,67,2.897,68,2.36,69,2.36,70,2.36,71,2.36,72,2.36,73,2.36,74,2.36,75,2.36,76,2.36,77,2.36,78,2.36,79,1.7,80,2.36,81,1.7,82,0.844,83,2.36,84,2.36,85,1.962]],["title/injectables/AppService.html",[18,1.613,86,0.427]],["body/injectables/AppService.html",[3,0.423,4,0.365,5,0.365,7,0.546,8,1.636,9,4.747,11,0.033,12,0.832,14,1.308,15,1.636,16,0.483,17,0.754,18,2.577,20,0.423,21,0.021,24,1.198,26,0.021,27,0.027,28,0.021,86,0.682,87,1.428,88,3.322,89,3.996,90,3.996,91,3.996]],["title/controllers/AuthController.html",[0,1.465,92,1.993]],["body/controllers/AuthController.html",[0,1.41,2,1.41,3,0.318,4,0.275,5,0.275,7,0.411,8,1.358,10,2.139,11,0.034,12,0.863,14,1.358,16,0.618,17,0.568,20,0.318,21,0.016,22,1.552,24,1.243,26,0.016,27,0.022,28,0.016,82,1.696,92,2.642,93,2.502,94,2.502,95,3.009,96,4.146,97,3.447,98,3.009,99,3.009,100,3.009,101,1.243,102,1.138,103,1.243,104,5.111,105,3.009,106,3.009,107,3.009,108,2.502,109,3.009,110,2.502,111,1.918,112,2.167,113,3.447,114,2.223,115,2.167,116,1.718,117,2.167,118,3.009,119,3.009,120,3.009,121,3.009,122,3.009,123,2.502,124,3.009,125,3.009,126,3.009]],["title/modules/AuthModule.html",[29,1.465,41,1.785]],["body/modules/AuthModule.html",[2,1.693,3,0.262,4,0.227,5,0.227,11,0.034,16,0.678,17,0.468,20,0.262,21,0.013,26,0.013,27,0.019,28,0.013,29,1.997,31,1.278,32,1.278,33,1.579,34,1.579,35,1.278,36,2.716,37,2.716,41,3.367,42,2.682,43,2.302,44,1.579,45,1.579,47,3.07,49,3.003,50,1.579,51,3.374,56,2.06,81,1.785,82,0.886,85,2.06,92,2.716,114,2.737,115,1.785,127,2.06,128,2.478,129,2.06,130,2.06,131,2.969,132,2.969,133,2.478,134,2.478,135,2.478,136,3.612,137,1.278,138,2.478,139,1.785,140,2.478,141,2.478,142,2.478,143,2.06,144,2.478,145,2.478,146,2.478]],["title/injectables/AuthService.html",[86,0.427,114,1.465]],["body/injectables/AuthService.html",[3,0.28,4,0.242,5,0.242,7,0.361,8,1.24,11,0.034,12,0.921,14,1.24,15,1.741,16,0.534,17,0.499,20,0.28,21,0.014,24,1.327,26,0.014,27,0.02,28,0.014,82,1.901,86,0.517,87,0.946,97,3.148,101,1.327,102,1.214,103,1.327,114,1.775,139,1.905,147,2.199,148,3.787,149,1.775,150,2.199,151,1.901,152,5.475,153,2.645,154,1.012,155,3.787,156,2.645,157,1.726,158,3.787,159,3.077,160,2.645,161,1.479,162,2.413,163,2.199,164,2.728,165,1.365,166,1.24,167,1.905,168,2.645,169,2.645,170,2.645,171,2.645,172,2.645]],["title/classes/CreateUserDto.html",[21,0.016,173,1.465]],["body/classes/CreateUserDto.html",[3,0.24,4,0.207,5,0.207,7,0.309,10,2.314,11,0.034,12,0.934,15,1.756,16,0.409,20,0.24,21,0.018,26,0.012,27,0.018,28,0.012,154,1.027,159,3.417,161,2.094,173,1.585,174,0.968,175,3.991,176,1.444,177,1.931,178,3.991,179,3.991,180,3.73,181,4.458,182,4.458,183,1.884,184,4.458,185,4.709,186,3.73,187,3.73,188,3.73,189,1.884,190,3.73,191,2.266,192,2.266,193,2.266,194,2.266,195,2.266,196,2.266,197,3.991,198,1.884,199,1.884,200,1.294,201,2.155,202,1.632,203,2.812,204,2.812,205,2.266]],["title/injectables/ErrorsInterceptor.html",[86,0.427,206,1.993]],["body/injectables/ErrorsInterceptor.html",[3,0.338,4,0.292,5,0.292,7,0.436,8,1.413,11,0.034,12,0.664,14,1.045,16,0.633,17,0.602,20,0.338,21,0.017,24,0.957,26,0.017,27,0.023,28,0.017,86,0.589,87,1.14,101,0.957,102,0.876,103,0.957,154,0.73,206,2.749,207,2.652,208,4.314,209,4.314,210,5.237,211,5.237,212,5.237,213,3.19,214,3.19,215,4.889,216,4.314,217,3.19,218,4.314,219,2.652,220,3.19,221,3.19,222,1.821,223,2.652,224,1.495,225,1.821,226,2.298,227,3.19,228,3.19,229,1.646,230,3.19,231,3.19,232,3.19]],["title/injectables/ExistsCPFConstraint.html",[86,0.427,233,1.613]],["body/injectables/ExistsCPFConstraint.html",[3,0.25,4,0.216,5,0.216,7,0.322,8,1.141,11,0.034,12,0.726,14,0.773,15,1.599,16,0.553,17,0.446,20,0.484,21,0.022,22,1.217,23,1.504,24,1.373,26,0.013,27,0.019,28,0.013,79,2.51,82,1.745,86,0.476,87,0.844,101,1.045,102,0.957,103,1.045,149,1.106,150,1.962,151,1.827,154,0.798,161,1.618,166,1.106,167,1.7,200,2.613,226,2.51,233,2.138,234,1.504,235,2.221,236,2.36,237,2.985,238,3.805,239,4.059,240,2.36,241,3.445,242,3.516,243,3.445,244,3.445,245,1.7,246,1.504,247,2.221,248,1.962,249,2.916,250,1.7,251,3.296,252,4.248,253,2.897,254,2.897,255,2.51,256,2.897,257,1.7]],["title/classes/FindOneParams.html",[21,0.016,258,1.993]],["body/classes/FindOneParams.html",[3,0.326,4,0.282,5,0.282,7,0.421,10,1.591,11,0.033,12,0.642,15,1.381,16,0.509,20,0.326,21,0.022,26,0.017,27,0.023,28,0.017,154,0.706,161,2.331,174,1.318,177,2.408,180,2.564,181,3.505,182,3.505,183,2.564,184,4.294,185,4.496,186,3.505,187,3.505,188,3.505,189,2.564,190,2.564,197,3.505,198,2.564,199,2.564,200,1.761,201,2.687,202,2.221,203,2.564,204,2.564,258,2.687,259,3.505,260,3.037,261,2.564,262,3.084,263,4.217,264,4.217,265,3.084,266,3.037]],["title/classes/IsCPFConstraint.html",[21,0.016,247,1.993]],["body/classes/IsCPFConstraint.html",[3,0.262,4,0.227,5,0.227,7,0.338,8,1.183,11,0.034,12,0.516,14,0.811,15,1.396,16,0.566,17,0.468,20,0.496,21,0.022,22,1.278,23,1.579,24,1.405,26,0.013,27,0.019,28,0.013,79,2.602,82,1.524,86,0.493,101,0.743,102,0.68,103,0.743,151,1.524,154,0.567,161,1.665,166,1.161,167,1.785,174,1.059,200,2.675,226,3.07,233,1.863,234,1.579,235,2.302,237,3.07,238,3.894,239,4.14,241,3.544,242,3.587,243,3.544,244,3.894,245,1.785,246,1.579,247,2.716,248,2.06,249,2.985,250,1.785,251,3.374,252,4.322,253,3.003,254,3.003,255,2.602,256,3.003,257,1.785,267,2.478]],["title/injectables/JwtAuthGuard.html",[86,0.427,116,1.785]],["body/injectables/JwtAuthGuard.html",[3,0.449,4,0.388,5,0.388,11,0.033,16,0.627,17,0.802,20,0.449,21,0.022,26,0.023,27,0.028,28,0.023,86,0.708,87,1.518,116,2.962,137,2.191,268,3.531,269,3.059,270,3.531,271,2.425,272,4.247]],["title/injectables/JwtStrategy.html",[86,0.427,131,1.785]],["body/injectables/JwtStrategy.html",[3,0.299,4,0.258,5,0.258,7,0.386,8,1.3,11,0.034,12,0.826,14,0.925,16,0.633,17,0.534,20,0.299,21,0.015,24,0.848,26,0.015,27,0.021,28,0.015,50,1.801,51,3.913,82,1.64,86,0.542,87,1.01,101,1.19,102,1.089,103,1.19,117,2.036,131,2.266,137,1.458,143,2.35,149,1.86,151,1.995,154,0.908,157,1.419,163,2.35,164,2.859,165,1.458,166,1.324,229,1.458,235,2.529,271,1.614,273,2.35,274,2.826,275,2.826,276,3.969,277,2.826,278,3.969,279,2.826,280,2.35,281,2.036,282,2.35,283,3.3,284,2.35,285,2.35,286,2.826,287,2.826,288,2.826,289,2.826,290,2.826,291,2.826,292,2.35]],["title/injectables/LocalAuthGuard.html",[86,0.427,111,1.993]],["body/injectables/LocalAuthGuard.html",[3,0.449,4,0.388,5,0.388,11,0.033,16,0.627,17,0.802,20,0.449,21,0.022,26,0.023,27,0.028,28,0.023,86,0.708,87,1.518,111,3.306,137,2.191,269,3.059,270,3.531,271,2.425,293,3.531,294,4.247]],["title/injectables/LocalStrategy.html",[86,0.427,132,1.785]],["body/injectables/LocalStrategy.html",[3,0.307,4,0.266,5,0.266,7,0.396,8,1.324,11,0.034,12,0.842,14,0.951,15,1.733,16,0.608,17,0.548,20,0.307,21,0.015,22,1.498,24,0.871,26,0.016,27,0.022,28,0.016,82,1.664,86,0.552,87,1.038,101,1.213,102,1.11,103,1.213,112,2.091,114,2.568,115,2.091,132,2.309,137,1.498,149,1.361,154,0.926,157,1.664,159,3.208,161,1.579,162,2.577,165,1.498,166,1.361,229,1.498,235,2.577,237,2.913,271,1.658,280,2.414,281,2.091,282,2.414,283,3.362,284,2.414,285,2.414,292,2.414,295,2.414,296,2.904,297,2.904,298,2.904,299,2.904,300,2.904,301,2.904,302,2.904]],["title/classes/StatusCreateUserDto.html",[21,0.016,222,1.785]],["body/classes/StatusCreateUserDto.html",[3,0.373,4,0.322,5,0.322,7,0.481,11,0.033,12,1.07,15,1.509,20,0.373,21,0.018,26,0.019,27,0.025,28,0.019,101,1.056,102,0.967,103,1.056,149,1.651,154,1.055,174,1.505,176,2.245,177,2.631,222,2.631,224,2.553,303,4.529,304,4.822,305,4.701,306,2.928,307,4.609,308,3.831,309,3.523,310,3.523,311,2.928,312,2.928]],["title/classes/SuccessFindOneDto.html",[21,0.016,313,1.993]],["body/classes/SuccessFindOneDto.html",[3,0.354,4,0.306,5,0.306,7,0.457,11,0.034,12,1.043,16,0.405,20,0.354,21,0.017,26,0.018,27,0.024,28,0.018,101,1.004,102,0.919,103,1.004,149,1.569,154,1.147,157,1.197,173,1.569,174,1.43,177,2.545,224,1.569,225,1.912,251,2.411,304,4.853,305,4.623,306,3.705,308,3.705,311,2.783,312,2.783,313,2.84,314,4.44,315,3.847,316,2.783,317,3.348,318,3.348,319,3.348,320,3.348]],["title/classes/UpdateUserDto.html",[21,0.016,321,1.785]],["body/classes/UpdateUserDto.html",[3,0.447,4,0.386,5,0.386,11,0.033,16,0.625,20,0.447,21,0.022,26,0.023,27,0.028,28,0.023,173,1.979,174,1.804,176,2.691,224,1.979,225,2.411,271,2.411,321,2.952,322,3.511,323,4.223,324,3.511,325,3.511,326,4.223]],["title/classes/User.html",[21,0.016,157,1.118]],["body/classes/User.html",[3,0.321,4,0.277,5,0.277,7,0.414,10,2.646,11,0.034,12,1.068,15,1.898,16,0.504,20,0.504,21,0.016,26,0.016,27,0.022,28,0.016,55,1.732,154,1.231,157,1.703,159,3.036,161,1.86,165,1.565,174,1.296,177,2.381,178,3.96,179,3.96,327,1.933,328,5.881,329,3.034,330,3.034,331,3.034,332,3.034,333,4.169,334,3.034,335,4.169,336,2.185,337,2.185,338,3.034,339,1.933,340,2.522]],["title/controllers/UsersController.html",[0,1.465,341,1.993]],["body/controllers/UsersController.html",[0,0.891,2,0.891,3,0.201,4,0.174,5,0.174,7,0.26,8,0.969,10,2.29,11,0.034,12,0.924,14,1.454,16,0.63,17,0.359,20,0.201,21,0.01,22,0.981,23,1.212,24,1.331,26,0.01,27,0.016,28,0.01,82,1.68,94,1.581,101,1.229,102,1.125,103,1.229,108,2.459,110,1.581,113,1.581,116,1.086,123,2.459,151,1.298,154,0.938,157,1.058,162,1.885,165,0.981,166,1.386,173,2.203,206,1.212,222,1.086,223,1.581,224,1.702,225,2.073,229,1.526,246,1.212,258,3.395,260,1.369,313,1.212,315,1.369,321,2.897,341,1.885,342,1.581,343,1.901,344,3.406,345,2.459,346,2.459,347,2.459,348,1.581,349,1.901,350,1.901,351,1.901,352,1.901,353,1.901,354,1.901,355,4.701,356,1.901,357,1.901,358,1.901,359,1.901,360,1.901,361,1.901,362,2.958,363,1.901,364,1.901,365,1.581,366,1.901,367,1.581,368,1.581,369,1.901,370,1.901,371,1.901,372,1.901,373,1.901,374,1.901,375,1.901,376,4.097,377,1.901,378,1.901,379,1.901,380,1.901,381,1.901,382,1.901,383,1.901,384,1.901,385,1.901,386,1.901,387,1.901,388,1.901,389,1.901,390,1.901,391,1.901,392,1.901,393,1.901,394,1.901]],["title/modules/UsersModule.html",[29,1.465,42,1.613]],["body/modules/UsersModule.html",[2,1.821,3,0.29,4,0.251,5,0.251,11,0.034,16,0.65,17,0.518,20,0.29,21,0.014,24,0.823,26,0.015,27,0.021,28,0.015,29,2.115,31,1.415,32,1.415,33,1.748,34,1.748,35,1.415,36,2.876,37,2.476,42,2.966,43,2.476,44,1.748,45,1.748,47,1.975,54,2.28,55,1.566,81,1.975,102,0.753,151,2.108,157,0.981,202,1.975,233,2.776,246,1.748,249,1.748,255,1.975,339,2.476,341,2.876,365,3.231,395,2.28,396,2.28,397,2.28,398,2.743,399,2.743,400,2.28,401,2.743,402,2.743,403,2.743,404,2.743,405,2.743,406,2.743,407,2.743,408,2.743,409,2.743]],["title/injectables/UsersService.html",[86,0.427,151,1.118]],["body/injectables/UsersService.html",[3,0.224,4,0.194,5,0.194,7,0.289,8,1.052,11,0.034,12,1.022,14,1.526,15,1.762,16,0.593,17,0.4,20,0.224,21,0.011,24,1.398,26,0.011,27,0.017,28,0.011,55,1.209,82,2.02,86,0.439,87,0.757,101,1.398,102,1.28,103,1.398,149,0.992,151,1.149,154,1.067,157,0.757,161,1.916,162,3.348,164,1.525,165,1.092,166,1.82,173,2.184,224,1.506,225,1.835,229,1.092,321,2.912,336,1.525,337,1.525,344,3.605,345,2.672,346,2.672,347,2.672,348,2.672,367,1.761,368,1.761,400,1.761,410,1.761,411,2.118,412,3.884,413,2.118,414,2.118,415,2.118,416,2.118,417,3.214,418,2.118,419,3.214,420,2.118,421,3.214,422,2.118,423,2.118,424,2.118,425,2.118,426,2.118,427,2.118,428,2.118,429,2.118,430,2.118,431,2.118,432,2.118,433,2.118,434,2.118]],["title/coverage.html",[435,3.066]],["body/coverage.html",[0,1.967,1,1.538,5,0.221,6,2.006,11,0.033,18,1.245,21,0.028,26,0.013,27,0.019,28,0.013,35,1.245,67,2.006,86,0.761,88,2.006,92,1.538,93,2.006,111,1.538,114,1.131,116,1.378,131,1.378,132,1.378,147,2.006,151,0.863,154,0.552,157,0.863,173,1.131,175,2.006,176,2.676,201,1.538,206,1.538,207,2.006,222,1.378,224,1.131,229,1.245,233,1.245,234,2.948,247,1.538,249,2.676,258,1.538,259,2.006,260,1.738,261,2.006,266,1.738,268,2.006,269,2.552,273,2.006,293,2.006,295,2.006,303,2.006,313,1.538,314,2.006,315,1.738,316,2.006,321,1.378,322,2.006,327,2.258,339,1.538,341,1.538,342,2.006,410,2.006,435,1.738,436,2.413,437,2.413,438,6.189,439,4.928,440,4.626,441,4.199,442,5.324,443,2.006,444,3.543,445,2.413,446,2.413,447,2.413,448,2.413,449,2.413]],["title/dependencies.html",[32,1.938,450,2.617]],["body/dependencies.html",[11,0.034,17,0.641,21,0.023,26,0.018,27,0.024,28,0.018,32,1.751,50,2.163,55,1.938,59,2.821,60,2.821,112,2.444,117,2.444,137,1.751,139,2.444,161,1.325,200,2.568,219,2.821,245,2.444,281,3.633,324,2.821,325,2.821,336,2.444,451,5.044,452,3.394,453,3.394,454,3.394,455,3.394,456,3.394,457,3.394,458,3.394,459,3.394,460,3.394,461,3.394,462,3.394,463,3.394,464,3.394,465,3.394,466,3.394,467,3.394,468,3.394,469,3.394,470,3.394,471,3.394,472,3.394,473,3.394]],["title/miscellaneous/functions.html",[474,1.35,475,3.124]],["body/miscellaneous/functions.html",[7,0.564,11,0.031,26,0.022,27,0.027,28,0.022,35,2.853,101,1.529,102,1.399,103,1.529,201,3.249,234,2.631,242,3.672,250,2.974,257,2.974,266,3.672,443,3.433,474,2.13,475,3.433,476,4.129,477,5.098,478,5.098]],["title/index.html",[7,0.357,479,2.617,480,2.617]],["body/index.html",[4,0.28,11,0.033,26,0.016,27,0.023,28,0.016,61,2.543,435,2.203,481,3.059,482,3.059,483,4.193,484,3.059,485,3.059,486,3.059,487,3.059,488,3.059,489,3.059,490,3.059,491,4.784,492,3.059,493,3.059,494,3.059,495,3.059,496,5.703,497,3.059,498,3.059,499,3.059,500,5.569,501,3.059,502,3.059,503,4.193,504,3.059,505,3.059,506,3.059,507,3.059,508,4.193,509,4.193,510,3.059,511,3.059,512,3.059,513,4.193,514,4.193,515,3.059,516,3.059,517,3.059,518,3.059,519,3.059,520,2.543,521,3.059,522,3.059,523,3.059,524,3.059,525,3.059,526,3.059,527,3.059,528,3.059,529,3.059,530,3.059,531,3.059,532,3.059,533,3.059,534,3.059,535,3.059,536,3.059,537,3.059]],["title/modules.html",[31,2.196]],["body/modules.html",[11,0.029,26,0.024,27,0.029,28,0.024,30,2.836,31,2.296,41,2.541,42,2.296,520,4.752,538,5.716,539,5.716,540,5.716]],["title/overview.html",[541,3.538]],["body/overview.html",[2,1.416,11,0.033,18,2.452,26,0.016,27,0.022,28,0.016,29,1.416,30,3.69,31,1.559,32,1.559,33,1.925,34,1.925,35,1.559,36,1.925,37,1.925,38,2.512,39,2.512,40,2.512,41,3.457,42,3.031,43,2.649,44,1.925,45,1.925,87,1.08,114,2.663,127,2.512,129,2.512,130,2.512,131,2.714,132,2.714,151,2.032,174,1.291,233,2.452,395,2.512,396,2.512,397,2.512,541,2.512,542,4.158,543,3.022,544,3.022]],["title/miscellaneous/typealiases.html",[474,1.35,545,3.758]],["body/miscellaneous/typealiases.html",[7,0.638,11,0.029,26,0.025,27,0.029,28,0.025,154,1.07,327,2.979,337,3.957,474,2.411,546,4.674,547,3.886]],["title/miscellaneous/variables.html",[474,1.35,548,3.124]],["body/miscellaneous/variables.html",[7,0.626,11,0.031,26,0.025,27,0.029,28,0.025,327,2.923,339,3.463,340,3.814,474,2.366,547,3.814,548,3.814,549,4.588,550,4.588]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["2.1.4",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["2592000s",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":542,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["5.12.8",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":544,"title":{},"body":{"overview.html":{}}}],["7.1.5",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":543,"title":{},"body":{"overview.html":{}}}],["aliases",{"_index":546,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":521,"title":{},"body":{"index.html":{}}}],["app",{"_index":498,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":489,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":238,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["async",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":269,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["authcontroller",{"_index":92,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":270,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":272,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":294,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":530,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":114,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":522,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":217,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["badrequestexception(new",{"_index":230,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["body",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":308,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":540,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":538,"title":{},"body":{"modules.html":{}}}],["building",{"_index":484,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":264,"title":{},"body":{"classes/FindOneParams.html":{}}}],["callhandler",{"_index":212,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror",{"_index":220,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":395,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":396,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":397,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cnpj",{"_index":245,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"dependencies.html":{}}}],["com",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["config/configuration",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongourl",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('super_secret_key",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraints",{"_index":256,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":296,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{}}}],["constructor(success",{"_index":306,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["constructor(success,msg",{"_index":310,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["constructor(usermodel",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{}}}],["context",{"_index":214,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":435,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["cpf'})@length(11",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["cpf.decorator",{"_index":202,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"modules/UsersModule.html":{}}}],["cpf.isvalid(cpf",{"_index":248,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["create",{"_index":224,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["create(@body",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":173,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["criado",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["delete(':cpf",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":490,"title":{},"body":{"index.html":{}}}],["deve",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["development",{"_index":499,"title":{},"body":{"index.html":{}}}],["doc",{"_index":405,"title":{},"body":{"modules/UsersModule.html":{}}}],["document",{"_index":335,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["dto/create",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/find",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/status",{"_index":223,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"controllers/UsersController.html":{}}}],["dto/sucess",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/update",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dígitos",{"_index":204,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["dígitos'})@iscpf({message",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["dígitos'})@isphonenumber('br",{"_index":195,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["e2e",{"_index":510,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":485,"title":{},"body":{"index.html":{}}}],["env",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["env.local",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test.local",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["err.response.message",{"_index":232,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["errorsinterceptor",{"_index":206,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["exec",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["executioncontext",{"_index":210,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["existscpf",{"_index":266,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["existscpf(validationoptions",{"_index":257,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["existscpfconstraint",{"_index":233,"title":{"injectables/ExistsCPFConstraint.html":{}},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["expiresin",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[usersservice",{"_index":409,"title":{},"body":{"modules/UsersModule.html":{}}}],["express",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":271,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":315,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["findall",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(cpf",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(params",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoneparams",{"_index":258,"title":{"classes/FindOneParams.html":{}},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["framework",{"_index":483,"title":{},"body":{"index.html":{}}}],["function",{"_index":249,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["functions",{"_index":475,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':cpf",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':cpf')@useinterceptors(errorsinterceptor",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":479,"title":{"index.html":{}},"body":{}}],["grow",{"_index":517,"title":{},"body":{"index.html":{}}}],["handle",{"_index":227,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["hello",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":527,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":534,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":226,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":86,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":495,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":497,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":208,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["intercept(context",{"_index":209,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["inválido",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["inválido'})@existscpf({message",{"_index":262,"title":{},"body":{"classes/FindOneParams.html":{}}}],["iscpf",{"_index":201,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscpf(validationoptions",{"_index":250,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["iscpfconstraint",{"_index":247,"title":{"classes/IsCPFConstraint.html":{}},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"coverage.html":{}}}],["isglobal",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isnotempty({message",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isphonenumber",{"_index":198,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isphonenumber('br",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":116,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":131,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":531,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":199,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["length(11",{"_index":203,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["license",{"_index":537,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":514,"title":{},"body":{"index.html":{}}}],["literal",{"_index":318,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["load",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":111,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":132,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["metadata",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":474,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":513,"title":{},"body":{"index.html":{}}}],["mode",{"_index":503,"title":{},"body":{"index.html":{}}}],["model",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":336,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":401,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":526,"title":{},"body":{"index.html":{}}}],["msg",{"_index":304,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["myśliwiec",{"_index":532,"title":{},"body":{"index.html":{}}}],["name",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["necessário",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["nest",{"_index":491,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":216,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":324,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":229,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":211,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["node.js",{"_index":482,"title":{},"body":{"index.html":{}}}],["nome",{"_index":178,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["npm",{"_index":496,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["não",{"_index":263,"title":{},"body":{"classes/FindOneParams.html":{}}}],["o",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["object",{"_index":251,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"classes/SuccessFindOneDto.html":{}}}],["object.constructor",{"_index":254,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["observable",{"_index":215,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["one",{"_index":260,"title":{},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["one.dto",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["one.dto.ts",{"_index":316,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"coverage.html":{}}}],["one.dto.ts:4",{"_index":320,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["one.dto.ts:5",{"_index":319,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["one.dto.ts:7",{"_index":317,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["open",{"_index":515,"title":{},"body":{"index.html":{}}}],["optional",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":255,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":541,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":450,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["params.dto",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["params.dto.ts",{"_index":261,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["params.dto.ts:18",{"_index":265,"title":{},"body":{"classes/FindOneParams.html":{}}}],["partialtype",{"_index":323,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":326,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":281,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":282,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":284,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwordfield",{"_index":300,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':cpf",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipe(catcherror(err",{"_index":228,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["please",{"_index":524,"title":{},"body":{"index.html":{}}}],["post",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useinterceptors(errorsinterceptor",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":505,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":481,"title":{},"body":{"index.html":{}}}],["project",{"_index":516,"title":{},"body":{"index.html":{}}}],["promise",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":328,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":177,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{}}}],["propertyname",{"_index":252,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["read",{"_index":525,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["registerdecorator",{"_index":241,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["remove",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(cpf",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(params",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":494,"title":{},"body":{"index.html":{}}}],["req",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":406,"title":{},"body":{"modules/UsersModule.html":{}}}],["ret.__v",{"_index":408,"title":{},"body":{"modules/UsersModule.html":{}}}],["ret._id",{"_index":407,"title":{},"body":{"modules/UsersModule.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":500,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":219,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":221,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["scalable",{"_index":486,"title":{},"body":{"index.html":{}}}],["schema",{"_index":333,"title":{},"body":{"classes/User.html":{}}}],["schemafactory",{"_index":334,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":340,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":400,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":487,"title":{},"body":{"index.html":{}}}],["serveroot",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":488,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["sobrenome",{"_index":179,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":519,"title":{},"body":{"index.html":{}}}],["src/.../cpf.decorator.ts",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":547,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":268,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:20",{"_index":277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":293,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":295,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":298,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":297,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/main.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/cpf.decorator.ts",{"_index":234,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/cpf.decorator.ts:15",{"_index":267,"title":{},"body":{"classes/IsCPFConstraint.html":{}}}],["src/users/cpf.decorator.ts:34",{"_index":236,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{}}}],["src/users/cpf.decorator.ts:37",{"_index":240,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{}}}],["src/users/dto/create",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/find",{"_index":259,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["src/users/dto/status",{"_index":303,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/sucess",{"_index":314,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":322,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":327,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":330,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":331,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":332,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":329,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:18",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":398,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/validations.interceptor.ts",{"_index":207,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/users/validations.interceptor.ts:14",{"_index":213,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["start",{"_index":501,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":504,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":506,"title":{},"body":{"index.html":{}}}],["started",{"_index":480,"title":{"index.html":{}},"body":{}}],["starter",{"_index":493,"title":{},"body":{"index.html":{}}}],["statements",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscreateuserdto",{"_index":222,"title":{"classes/StatusCreateUserDto.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"classes/StatusCreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["statuscreateuserdto(false",{"_index":231,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["statuscreateuserdto(true",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":528,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":280,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["success",{"_index":305,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["successfindonedto",{"_index":313,"title":{"classes/SuccessFindOneDto.html":{}},"body":{"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["successfindonedto(true",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["sucesso",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":285,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":520,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":539,"title":{},"body":{"modules.html":{}}}],["table",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":253,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["telefone",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{}}}],["telefone'})@length(11",{"_index":194,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["telefone:string",{"_index":301,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["ter",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["test",{"_index":509,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":512,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":511,"title":{},"body":{"index.html":{}}}],["tests",{"_index":508,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":518,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(cpf",{"_index":302,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.msg",{"_index":312,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["this.success",{"_index":311,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["this.usermodel(createuserdto",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneanddelete",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneandupdate",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(cpf",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["this.usersservice.findone(params.cpf",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(payload.cpf",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usersservice.remove(params.cpf",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(params.cpf",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["throwerror",{"_index":218,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["token",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":529,"title":{},"body":{"index.html":{}}}],["transform",{"_index":404,"title":{},"body":{"modules/UsersModule.html":{}}}],["transformer",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["twitter",{"_index":535,"title":{},"body":{"index.html":{}}}],["type",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":545,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":325,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":492,"title":{},"body":{"index.html":{}}}],["um",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["unauthorizedexception",{"_index":283,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["unit",{"_index":507,"title":{},"body":{"index.html":{}}}],["update",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(cpf",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(params",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":321,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto).exec",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["uri",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["useguards",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':cpf')@useinterceptors(errorsinterceptor",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@patch(':cpf')@useinterceptors(errorsinterceptor",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(errorsinterceptor",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":157,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.cpf",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":225,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/StatusCreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":309,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":307,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":402,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.telefone",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdocument",{"_index":337,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel:model",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernamefield",{"_index":299,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":399,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":246,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":339,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.set('tojson",{"_index":403,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscontroller",{"_index":341,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":151,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["validate",{"_index":235,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(cpf",{"_index":237,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(cpf",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":239,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validationoptions",{"_index":242,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["validations.interceptor",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":200,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":243,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validatorconstraintinterface",{"_index":244,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["value",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":548,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":502,"title":{},"body":{"index.html":{}}}],["website",{"_index":533,"title":{},"body":{"index.html":{}}}],["world",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["writeconcern",{"_index":338,"title":{},"body":{"classes/User.html":{}}}],["yes",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":523,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config';\nimport configuration from '../config/configuration';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports:[\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', '..' , 'client'),\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', '..', 'documentation'),\n      serveRoot: '/documentation'\n    }),\n    ConfigModule.forRoot({\n      load: [configuration],\n      envFilePath: [\n        // '.env.local',\n        // '.env',\n        // '.env.development.local',\n        // '.env.development'\n        '.env.test.local',\n        '.env.test'\n      ],\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('mongourl'),\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    AuthModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport { JwtAuthGuard } from './jwt-auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Request() req) {\n      return this.authService.login(req.body)\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get('profile')\n    getProfile(@Request() req) {\n      return req.user;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SUPER_SECRET_KEY'),\n        signOptions: { expiresIn: '2592000s' },\n      }),\n      inject: [ConfigService],\n    })\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(cpf: string, telefone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    telefone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) { }\n\n  async validateUser(cpf: string, telefone: string): Promise {\n    const user = await this.usersService.findOne(cpf);\n    if (user && (user.telefone === telefone)) {\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    return {\n      token: this.jwtService.sign({ cpf: user.cpf }),\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                nome\n                            \n                            \n                                sobrenome\n                            \n                            \n                                telefone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um CPF'})@Length(11, 11, {message: 'O CPF deve ter 11 dígitos'})@IsCPF({message: 'CPF inválido'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um nome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sobrenome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um sobrenome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telefone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um telefone'})@Length(11, 11, {message: 'O telefone deve ter 11 dígitos'})@IsPhoneNumber('BR', {message: 'Telefone Inválido'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber, Length } from 'class-validator';\nimport { IsCPF } from '../cpf.decorator';\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({\n        message: 'É necessário um nome',\n    })\n    nome: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um sobrenome',\n    })\n    sobrenome: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um telefone',\n    })\n    @Length(11, 11, {  \n        message: 'O telefone deve ter 11 dígitos'\n    })\n    @IsPhoneNumber('BR',{\n        message: 'Telefone Inválido'\n    })\n    telefone: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um CPF',\n    })\n    @Length(11, 11, {  \n        message: 'O CPF deve ter 11 dígitos'\n    })\n    @IsCPF({\n        message: 'CPF inválido',\n    })\n    cpf: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validations.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/users/validations.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    BadRequestException,\n  } from '@nestjs/common';\n  import { Observable, throwError } from 'rxjs';\n  import { catchError } from 'rxjs/operators';\nimport { StatusCreateUserDto } from './dto/status-create-user.dto';\n  \n  @Injectable()\n  export class ErrorsInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        \n      return next\n        .handle()\n        .pipe(catchError(err => throwError(\n          new BadRequestException(new StatusCreateUserDto(false, err.response.message))\n        )));\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistsCPFConstraint.html":{"url":"injectables/ExistsCPFConstraint.html","title":"injectable - ExistsCPFConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExistsCPFConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/cpf.decorator.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/cpf.decorator.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(CPF: string, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/users/cpf.decorator.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CPF\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    registerDecorator,\n    ValidationOptions,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n    ValidationArguments,\n  } from 'class-validator';\n\nimport { cpf } from 'cpf-cnpj-validator'; \nimport { UsersService } from './users.service';\nimport {Injectable} from '@nestjs/common';\n\n@ValidatorConstraint({ async: true })\nexport class IsCPFConstraint implements ValidatorConstraintInterface {\n  validate(CPF: any, args: ValidationArguments) {\n    return cpf.isValid(CPF);\n  }\n}\n\nexport function IsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsCPFConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ async: true })\n@Injectable()\nexport class ExistsCPFConstraint implements ValidatorConstraintInterface {\n  constructor(private readonly usersService: UsersService){}\n\n  async validate(CPF: string, args: ValidationArguments) {\n    return !!(await this.usersService.findOne(CPF));\n  }\n}\n\nexport function ExistsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: ExistsCPFConstraint,\n    });\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneParams.html":{"url":"classes/FindOneParams.html","title":"class - FindOneParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-one-params.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um CPF'})@Length(11, 11, {message: 'O CPF deve ter 11 dígitos'})@IsCPF({message: 'CPF inválido'})@ExistsCPF({message: 'CPF não cadastrado'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/find-one-params.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber, Length } from 'class-validator';\nimport { IsCPF, ExistsCPF } from '../cpf.decorator';\n\nexport class FindOneParams {\n\n    @IsNotEmpty({\n        message: 'É necessário um CPF',\n    })\n    @Length(11, 11, {  \n        message: 'O CPF deve ter 11 dígitos'\n    })\n    @IsCPF({\n        message: 'CPF inválido',\n    })\n    @ExistsCPF({\n        message: 'CPF não cadastrado',\n    })\n    cpf: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsCPFConstraint.html":{"url":"classes/IsCPFConstraint.html","title":"class - IsCPFConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsCPFConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/cpf.decorator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(CPF: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/users/cpf.decorator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CPF\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    registerDecorator,\n    ValidationOptions,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n    ValidationArguments,\n  } from 'class-validator';\n\nimport { cpf } from 'cpf-cnpj-validator'; \nimport { UsersService } from './users.service';\nimport {Injectable} from '@nestjs/common';\n\n@ValidatorConstraint({ async: true })\nexport class IsCPFConstraint implements ValidatorConstraintInterface {\n  validate(CPF: any, args: ValidationArguments) {\n    return cpf.isValid(CPF);\n  }\n}\n\nexport function IsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsCPFConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ async: true })\n@Injectable()\nexport class ExistsCPFConstraint implements ValidatorConstraintInterface {\n  constructor(private readonly usersService: UsersService){}\n\n  async validate(CPF: string, args: ValidationArguments) {\n    return !!(await this.usersService.findOne(CPF));\n  }\n}\n\nexport function ExistsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: ExistsCPFConstraint,\n    });\n  };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SUPER_SECRET_KEY'),\n    });\n  }\n\n  async validate(payload: any) {\n    const user = await this.usersService.findOne(payload.cpf);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(cpf: string, telefone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    telefone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'cpf', passwordField: 'telefone' });\n  }\n\n  async validate(cpf: string, telefone:string): Promise {\n    const user = await this.authService.validateUser(cpf, telefone);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusCreateUserDto.html":{"url":"classes/StatusCreateUserDto.html","title":"class - StatusCreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusCreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/status-create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                msg\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success, msg)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/status-create-user.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/status-create-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/status-create-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatusCreateUserDto {\n    success: boolean;\n    msg: string[]\n    \n    constructor(success,msg) {\n        this.success = success;\n        this.msg = msg;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessFindOneDto.html":{"url":"classes/SuccessFindOneDto.html","title":"class - SuccessFindOneDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessFindOneDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sucess-find-one.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                msg\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success, msg)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/sucess-find-one.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/sucess-find-one.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/sucess-find-one.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from \"./create-user.dto\";\n\nexport class SuccessFindOneDto {\n    success: boolean;\n    msg: {\n        user: object\n    }\n    \n    constructor(success, msg) {\n        this.success = success;\n        this.msg = msg;\n    }   \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                nome\n                            \n                            \n                                sobrenome\n                            \n                            \n                                telefone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sobrenome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telefone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nexport type UserDocument = User & Document;\n\n@Schema({\n  writeConcern: {},\n})\nexport class User {\n\n  @Prop()\n  nome: string;\n\n  @Prop()\n  sobrenome: string;\n\n  @Prop()\n  telefone: string;\n\n  @Prop()\n  cpf: string;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(params: FindOneParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':cpf')@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindOneParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(params: FindOneParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':cpf')@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindOneParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(params: FindOneParams, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':cpf')@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindOneParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ErrorsInterceptor } from './validations.interceptor';\nimport { StatusCreateUserDto } from './dto/status-create-user.dto';\nimport { FindOneParams } from './dto/find-one-params.dto';\nimport { SuccessFindOneDto } from './dto/sucess-find-one.dto';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @UseInterceptors(ErrorsInterceptor)\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    await (this.usersService.create(createUserDto))\n    return new StatusCreateUserDto(true, ['Usuário criado com sucesso!'])\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':cpf')\n  @UseInterceptors(ErrorsInterceptor)\n  async findOne(@Param() params: FindOneParams) {\n    const user = await this.usersService.findOne(params.cpf);\n    return  new SuccessFindOneDto(true, { user });\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':cpf')\n  @UseInterceptors(ErrorsInterceptor)\n  update(@Param() params: FindOneParams, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(params.cpf, updateUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':cpf')\n  @UseInterceptors(ErrorsInterceptor)\n  remove(@Param() params: FindOneParams) {\n    return this.usersService.remove(params.cpf);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nExistsCPFConstraint\n\nExistsCPFConstraint\n\nUsersModule -->\n\nExistsCPFConstraint->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExistsCPFConstraint\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { ExistsCPFConstraint } from './cpf.decorator';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          UserSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return UserSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [UsersController],\n  providers: [ExistsCPFConstraint, UsersService],\n  exports:[UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(cpf: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel:Model) {}\n\n  async create(createUserDto: CreateUserDto){\n    const createdUser = new this.userModel(createUserDto);\n    return await createdUser.save()\n  }\n\n  findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(cpf: string): Promise  {\n    return await this.userModel.findOne({ cpf });\n  }\n\n  async update(cpf: string, updateUserDto: UpdateUserDto): Promise {\n    return this.userModel.findOneAndUpdate({ cpf }, updateUserDto).exec();\n  }\n\n  async remove(cpf: string): Promise{\n    return await this.userModel.findOneAndDelete({ cpf }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            class\n            IsCPFConstraint\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            injectable\n            ExistsCPFConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            function\n            ExistsCPF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            function\n            IsCPF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/find-one-params.dto.ts\n            \n            class\n            FindOneParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/status-create-user.dto.ts\n            \n            class\n            StatusCreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/sucess-find-one.dto.ts\n            \n            class\n            SuccessFindOneDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/validations.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            mongoose : ^5.12.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ExistsCPF   (src/.../cpf.decorator.ts)\n                        \n                        \n                            IsCPF   (src/.../cpf.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/users/cpf.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ExistsCPF\n                        \n                        \n                    \n                \n            \n            \n                \nExistsCPF(validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IsCPF\n                        \n                        \n                    \n                \n            \n            \n                \nIsCPF(validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nExistsCPFConstraint\n\nExistsCPFConstraint\n\nUsersModule -->\n\nExistsCPFConstraint->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
