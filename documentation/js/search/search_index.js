var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.535,1,1.744]],["body/controllers/AppController.html",[0,2.314,1,2.63,2,1.8,3,0.534,4,0.458,5,0.458,6,2.763,7,0.458,8,1.827,9,4.146,10,1.8,11,0.044,12,0.797,13,3.387,14,1.421,15,1.299,16,0.792,17,1.01,18,2.268,19,2.763,20,0.534,21,0.026,22,2.045,23,2.045,24,1.268,25,3.387,26,0.026,27,0.033,28,0.026]],["title/modules/AppModule.html",[29,1.535,30,1.744]],["body/modules/AppModule.html",[1,2.432,2,1.83,3,0.378,4,0.324,5,0.324,11,0.044,16,0.929,17,0.715,18,2.286,19,1.957,20,0.378,21,0.018,26,0.018,27,0.026,28,0.018,29,2.141,30,3.087,31,1.275,32,1.275,33,1.666,34,1.666,35,1.275,36,2.797,37,1.666,38,1.957,39,1.957,40,1.957,41,2.578,42,2.391,43,1.666,44,1.666,45,2.399,46,2.809,47,2.399,48,2.399,49,2.809,50,4.402,51,3.444,52,2.399,53,1.957,54,1.275,55,2.399,56,2.399,57,2.399,58,2.399,59,2.399,60,2.399,61,2.399,62,2.399,63,2.399,64,2.399,65,2.399,66,1.666,67,2.399,68,1.957,69,1.275,70,2.399,71,2.399,72,2.399]],["title/injectables/AppService.html",[18,1.361,73,0.861]],["body/injectables/AppService.html",[3,0.567,4,0.486,5,0.486,7,0.486,8,1.899,9,4.239,11,0.043,12,0.847,14,1.51,15,1.35,16,0.654,17,1.073,18,2.133,20,0.567,21,0.027,24,1.347,26,0.027,27,0.034,28,0.027,73,1.35,74,1.912,75,2.936,76,3.599,77,3.599,78,3.599]],["title/classes/CreateUserDto.html",[21,0.022,79,1.212]],["body/classes/CreateUserDto.html",[3,0.314,4,0.269,5,0.269,7,0.269,10,2.138,11,0.044,12,0.947,15,1.446,16,0.546,20,0.314,21,0.023,26,0.015,27,0.023,28,0.015,79,1.26,80,0.746,81,3.523,82,1.202,83,1.596,84,2.034,85,3.523,86,3.523,87,3.956,88,0.947,89,3.283,90,3.956,91,3.956,92,1.625,93,3.956,94,4.19,95,3.283,96,3.283,97,3.283,98,1.625,99,3.283,100,1.992,101,1.992,102,1.992,103,1.992,104,1.992,105,1.992,106,3.523,107,1.625,108,1.625,109,1.058,110,1.813,111,1.383,112,2.45,113,2.45,114,1.992]],["title/injectables/ErrorsInterceptor.html",[73,0.861,115,1.744]],["body/injectables/ErrorsInterceptor.html",[3,0.448,4,0.384,5,0.384,7,0.384,8,1.626,11,0.044,12,0.668,14,1.192,16,0.861,17,0.847,20,0.448,21,0.022,24,1.063,26,0.022,27,0.029,28,0.022,73,1.156,74,1.509,88,0.668,115,2.34,116,2.317,117,3.876,118,3.876,119,4.74,120,4.74,121,4.74,122,2.84,123,1.063,124,0.949,125,1.063,126,2.84,127,4.412,128,3.876,129,2.84,130,3.876,131,2.317,132,2.84,133,2.84,134,1.509,135,2.317,136,1.192,137,1.509,138,1.972,139,2.84,140,2.84,141,1.715,142,2.84,143,2.84,144,2.84]],["title/injectables/ExistsCPFConstraint.html",[73,0.861,145,1.361]],["body/injectables/ExistsCPFConstraint.html",[3,0.327,4,0.281,5,0.281,7,0.281,8,1.3,11,0.044,12,0.729,14,0.871,15,1.311,16,0.747,17,0.619,20,0.648,21,0.028,22,1.254,23,1.254,24,1.538,26,0.016,27,0.024,28,0.016,66,2.151,69,2.336,73,0.924,74,1.103,84,1.555,88,0.729,109,2.184,123,1.16,124,1.036,125,1.16,138,2.151,145,1.746,146,1.254,147,2.527,148,1.254,149,2.076,150,1.726,151,2.076,152,3.023,153,3.352,154,3.586,155,2.076,156,3.023,157,3.053,158,3.023,159,3.023,160,1.442,161,1.254,162,1.871,163,1.694,164,2.481,165,1.442,166,2.853,167,3.761,168,2.527,169,2.527,170,2.151,171,2.527,172,1.254,173,1.694,174,1.442]],["title/classes/FindOneParams.html",[21,0.022,175,1.744]],["body/classes/FindOneParams.html",[3,0.432,4,0.371,5,0.371,7,0.371,10,1.457,11,0.043,12,0.645,15,1.128,16,0.688,20,0.432,21,0.029,26,0.021,27,0.029,28,0.021,80,1.026,83,2.01,84,2.28,88,0.645,89,2.237,90,3.086,91,3.086,92,2.237,93,3.809,94,3.997,95,3.086,96,3.086,97,3.086,98,2.237,99,2.237,106,3.086,107,2.237,108,2.237,109,1.457,110,2.284,111,1.904,112,2.237,113,2.237,175,2.284,176,3.086,177,2.627,178,2.237,179,2.742,180,3.783,181,3.783,182,2.742,183,2.627]],["title/classes/IsCPFConstraint.html",[21,0.022,162,1.744]],["body/classes/IsCPFConstraint.html",[3,0.344,4,0.295,5,0.295,7,0.295,8,1.349,11,0.044,12,0.514,14,0.916,15,1.138,16,0.765,17,0.651,20,0.664,21,0.029,22,1.319,23,1.319,24,1.577,26,0.017,27,0.024,28,0.017,66,2.233,69,2.029,73,0.959,80,0.818,84,1.602,88,0.514,109,2.238,123,0.818,124,0.73,125,0.818,138,2.651,145,1.515,146,1.319,147,2.624,150,1.429,152,3.114,153,3.436,154,3.662,156,3.114,157,3.118,158,3.114,159,3.436,160,1.517,161,1.319,162,2.305,163,1.782,164,2.543,165,1.517,166,2.925,167,3.831,168,2.624,169,2.624,170,2.233,171,2.624,172,1.319,173,1.782,174,1.517,184,2.184]],["title/classes/StatusCreateUserDto.html",[21,0.022,134,1.535]],["body/classes/StatusCreateUserDto.html",[3,0.497,4,0.426,5,0.426,7,0.426,11,0.043,12,1.094,15,1.239,20,0.497,21,0.024,26,0.024,27,0.032,28,0.024,80,1.18,82,1.903,83,2.208,88,0.978,123,1.18,124,1.053,125,1.18,134,2.208,136,2.074,148,1.903,185,4.033,186,4.305,187,4.191,188,2.571,189,4.155,190,3.39,191,3.151,192,3.151,193,2.571,194,2.571]],["title/classes/SuccessFindOneDto.html",[21,0.022,195,1.744]],["body/classes/SuccessFindOneDto.html",[3,0.471,4,0.404,5,0.404,7,0.404,11,0.043,12,1.065,16,0.543,20,0.471,21,0.023,26,0.023,27,0.03,28,0.023,79,1.253,80,1.118,83,2.131,88,1.065,123,1.118,124,0.999,125,1.118,136,1.253,137,1.588,148,1.804,166,2.075,186,4.331,187,4.118,188,3.272,190,3.272,193,2.437,194,2.437,195,2.422,196,3.948,197,3.36,198,2.437,199,2.988,200,2.988,201,2.988,202,2.988,203,1.253]],["title/classes/UpdateUserDto.html",[21,0.022,204,1.535]],["body/classes/UpdateUserDto.html",[3,0.602,4,0.516,5,0.516,11,0.043,16,0.853,20,0.602,21,0.029,26,0.029,27,0.036,28,0.029,79,1.601,80,1.428,82,2.304,136,1.601,137,2.028,204,2.495,205,3.113,206,3.816,207,3.113,208,3.113,209,3.816,210,3.816]],["title/classes/User.html",[21,0.022,203,1.212]],["body/classes/User.html",[3,0.425,4,0.364,5,0.364,7,0.364,10,2.463,11,0.044,12,1.091,15,1.571,16,0.679,20,0.677,21,0.02,26,0.02,27,0.028,28,0.02,54,1.432,80,1.009,83,1.987,84,1.801,85,3.501,86,3.501,87,3.501,88,1.146,203,1.801,211,1.627,212,5.349,213,2.695,214,2.695,215,2.695,216,2.695,217,3.738,218,2.695,219,3.738,220,1.871,221,1.871,222,2.695,223,1.871,224,1.627,225,2.199]],["title/controllers/UsersController.html",[0,1.535,226,1.744]],["body/controllers/UsersController.html",[0,0.91,2,0.91,3,0.27,4,0.231,5,0.231,7,0.231,8,1.121,10,2.143,11,0.044,12,0.949,14,1.692,15,1.274,16,0.84,17,0.51,20,0.27,21,0.013,22,1.033,23,1.033,24,1.51,26,0.013,27,0.02,28,0.013,69,2.271,79,1.793,88,0.875,115,1.033,123,1.392,124,1.243,125,1.392,134,0.91,135,1.396,136,1.38,137,1.748,141,1.614,150,1.231,161,1.033,172,1.614,175,2.244,177,1.189,195,1.033,197,1.189,203,1.121,204,2.455,223,1.189,226,1.614,227,1.396,228,1.712,229,1.396,230,3.032,231,2.181,232,2.181,233,2.181,234,1.396,235,1.712,236,1.712,237,2.673,238,1.712,239,1.712,240,1.712,241,1.712,242,2.673,243,1.396,244,2.673,245,1.712,246,3.032,247,1.396,248,2.673,249,1.712,250,2.673,251,2.673,252,1.712,253,1.712,254,1.396,255,1.712,256,1.396,257,1.396,258,1.712,259,1.712,260,1.712,261,1.712,262,1.712,263,1.712,264,2.673,265,1.712,266,1.712,267,1.712,268,1.712,269,1.712,270,1.712,271,1.712,272,1.712,273,1.712,274,1.712,275,1.712,276,1.712,277,1.712,278,1.712,279,1.712,280,1.712]],["title/modules/UsersModule.html",[29,1.535,41,1.535]],["body/modules/UsersModule.html",[2,1.881,3,0.393,4,0.337,5,0.337,11,0.044,16,0.893,17,0.743,20,0.393,21,0.019,24,0.933,26,0.019,27,0.027,28,0.019,29,2.187,31,1.325,32,1.325,33,1.731,34,1.731,35,1.325,36,2.858,37,1.731,41,2.745,42,2.458,43,1.731,44,1.731,46,2.034,53,2.034,54,1.325,68,2.034,111,1.731,124,0.833,145,2.316,150,1.84,161,1.505,164,1.505,170,1.731,203,1.046,224,2.137,226,2.485,254,2.888,281,2.034,282,2.034,283,2.493,284,2.493,285,2.034,286,2.493,287,2.493,288,2.493,289,2.493,290,2.493,291,2.493,292,2.493,293,3.54,294,2.493]],["title/injectables/UsersService.html",[73,0.861,150,1.081]],["body/injectables/UsersService.html",[3,0.299,4,0.256,5,0.256,7,0.256,8,1.214,11,0.044,12,1.048,14,1.869,15,1.328,16,0.81,17,0.565,20,0.299,21,0.014,24,1.582,26,0.014,27,0.022,28,0.014,54,1.008,69,2.367,73,0.863,74,1.008,79,1.773,84,1.214,88,0.994,123,1.582,124,1.413,125,1.582,136,1.214,137,1.537,141,1.145,148,1.145,150,1.083,172,1.747,203,1.472,204,2.462,220,1.317,221,1.317,223,1.317,229,1.547,230,3.202,231,2.36,232,2.36,233,2.36,234,2.36,243,2.36,246,3.202,247,2.36,256,1.547,257,1.547,285,1.547,295,1.547,296,1.896,297,3.508,298,1.896,299,1.896,300,1.896,301,1.896,302,2.893,303,1.896,304,4.454,305,1.896,306,1.896,307,1.896,308,1.896,309,1.896,310,1.896,311,1.896,312,1.896,313,1.896,314,3.508,315,1.896,316,1.896,317,1.896]],["title/coverage.html",[318,2.722]],["body/coverage.html",[0,1.85,1,1.471,5,0.329,6,1.987,11,0.043,18,1.148,21,0.038,26,0.018,27,0.026,28,0.018,35,1.294,73,1.322,75,1.987,79,1.022,81,1.987,82,2.453,88,0.573,110,1.471,115,1.471,116,1.987,134,1.294,136,1.022,141,1.471,145,1.148,146,2.676,150,0.912,162,1.471,164,2.453,175,1.471,176,1.987,177,1.692,178,1.987,183,1.692,185,1.987,195,1.471,196,1.987,197,1.692,198,1.987,203,1.022,204,1.294,205,1.987,211,2.102,224,1.471,226,1.471,227,1.987,295,1.987,318,1.692,319,2.436,320,2.436,321,2.436,322,5.604,323,4.689,324,1.987,325,4.689,326,2.436,327,3.482,328,3.482,329,2.436,330,2.436,331,2.436,332,2.436,333,2.436]],["title/dependencies.html",[32,1.843,334,2.423]],["body/dependencies.html",[11,0.044,17,1.049,26,0.027,27,0.034,28,0.027,32,1.87,49,2.87,54,1.87,84,1.476,109,1.87,131,2.87,160,2.443,207,2.87,208,2.87,220,2.443,335,4.901,336,3.519,337,3.519,338,3.519,339,3.519,340,3.519,341,3.519,342,3.519,343,3.519,344,3.519,345,3.519,346,3.519,347,3.519,348,3.519]],["title/miscellaneous/functions.html",[349,1.141,350,2.829]],["body/miscellaneous/functions.html",[7,0.504,11,0.04,26,0.028,27,0.035,28,0.028,35,2.673,110,2.793,123,1.732,124,1.546,125,1.732,146,2.25,157,3.212,165,2.587,174,2.587,183,3.212,324,3.039,349,1.755,350,3.039,351,3.726,352,4.626,353,4.626]],["title/index.html",[7,0.327,354,2.423,355,2.423]],["body/index.html",[4,0.367,11,0.043,26,0.021,27,0.029,28,0.021,318,1.888,356,2.718,357,2.718,358,3.761,359,2.718,360,2.718,361,2.718,362,2.718,363,2.718,364,2.718,365,2.718,366,4.312,367,2.718,368,2.718,369,2.718,370,2.718,371,5.179,372,2.718,373,2.718,374,2.718,375,5.052,376,2.718,377,2.718,378,3.761,379,2.718,380,2.718,381,2.718,382,2.718,383,3.761,384,3.761,385,2.718,386,2.718,387,2.718,388,3.761,389,3.761,390,2.718,391,2.718,392,2.718,393,2.718,394,2.718,395,2.217,396,2.718,397,2.718,398,2.718,399,2.718,400,2.718,401,2.718,402,2.718,403,2.718,404,2.718,405,2.718,406,2.718,407,2.718,408,2.718,409,2.718,410,2.718,411,2.718,412,2.718,413,2.718]],["title/modules.html",[31,2.083]],["body/modules.html",[11,0.038,26,0.032,27,0.038,28,0.032,30,2.516,31,2.214,41,2.214,395,4.039,414,4.952,415,4.952,416,4.952]],["title/overview.html",[417,3.198]],["body/overview.html",[2,1.753,11,0.041,18,2.24,26,0.025,27,0.033,28,0.025,29,1.753,30,3.226,31,1.753,32,1.753,33,2.291,34,2.291,35,1.753,36,2.291,37,2.291,38,2.691,39,2.691,40,2.691,41,2.891,42,2.973,43,2.291,44,2.291,74,1.753,80,1.235,145,2.24,150,1.78,281,2.691,282,2.691,417,2.691,418,4.282,419,3.299,420,3.299]],["title/miscellaneous/typealiases.html",[349,1.141,421,3.468]],["body/miscellaneous/typealiases.html",[7,0.575,11,0.038,26,0.032,27,0.038,28,0.032,88,1,211,2.567,221,3.479,349,2.003,422,4.251,423,3.468]],["title/miscellaneous/variables.html",[349,1.141,424,2.829]],["body/miscellaneous/variables.html",[7,0.563,11,0.04,26,0.032,27,0.038,28,0.032,211,2.516,224,2.99,225,3.399,349,1.963,423,3.399,424,3.399,425,4.167,426,4.167]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["1.0.3",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["2",{"_index":418,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":419,"title":{},"body":{"overview.html":{}}}],["5.12.8",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":420,"title":{},"body":{"overview.html":{}}}],["7.2.4",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":314,"title":{},"body":{"injectables/UsersService.html":{}}}],["aliases",{"_index":422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":396,"title":{},"body":{"index.html":{}}}],["app",{"_index":373,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":364,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":153,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["async",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":406,"title":{},"body":{"index.html":{}}}],["await",{"_index":172,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":397,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":129,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["badrequestexception(new",{"_index":142,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["body",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":190,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":416,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":414,"title":{},"body":{"modules.html":{}}}],["building",{"_index":359,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":181,"title":{},"body":{"classes/FindOneParams.html":{}}}],["callhandler",{"_index":121,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror",{"_index":132,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":80,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":281,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":282,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cnpj",{"_index":160,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"dependencies.html":{}}}],["com",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{}}}],["config/configuration",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongourl",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":223,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraints",{"_index":171,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":308,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{}}}],["constructor(success",{"_index":188,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["constructor(success,msg",{"_index":192,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["constructor(usermodel",{"_index":296,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":149,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{}}}],["context",{"_index":126,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":318,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":84,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["cpf'})@length(11",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["cpf.decorator",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"modules/UsersModule.html":{}}}],["cpf.isvalid(cpf",{"_index":163,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["create",{"_index":136,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["create(@body",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":311,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":313,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":79,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["criado",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["delete(':id",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":365,"title":{},"body":{"index.html":{}}}],["deve",{"_index":96,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["development",{"_index":374,"title":{},"body":{"index.html":{}}}],["doc",{"_index":290,"title":{},"body":{"modules/UsersModule.html":{}}}],["document",{"_index":219,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/find",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/status",{"_index":135,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"controllers/UsersController.html":{}}}],["dto/sucess",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/update",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dígitos",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["dígitos'})@iscpf({message",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["dígitos'})@isphonenumber('br",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["e2e",{"_index":385,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":360,"title":{},"body":{"index.html":{}}}],["env",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["env.local",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test.local",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["err.response.message",{"_index":144,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["errorsinterceptor",{"_index":115,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["executioncontext",{"_index":119,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["existscpf",{"_index":183,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["existscpf(validationoptions",{"_index":174,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["existscpfconstraint",{"_index":145,"title":{"injectables/ExistsCPFConstraint.html":{}},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":209,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":197,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["findall",{"_index":230,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param",{"_index":274,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(cpf",{"_index":302,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(params",{"_index":239,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoneparams",{"_index":175,"title":{"classes/FindOneParams.html":{}},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["framework",{"_index":358,"title":{},"body":{"index.html":{}}}],["function",{"_index":164,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["functions",{"_index":350,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':cpf",{"_index":273,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':cpf')@useinterceptors(errorsinterceptor",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":354,"title":{"index.html":{}},"body":{}}],["grow",{"_index":392,"title":{},"body":{"index.html":{}}}],["handle",{"_index":139,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":403,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":410,"title":{},"body":{"index.html":{}}}],["id",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":138,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":307,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":370,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":372,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":117,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["intercept(context",{"_index":118,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["inválido",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["inválido'})@existscpf({message",{"_index":179,"title":{},"body":{"classes/FindOneParams.html":{}}}],["iscpf",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscpf(validationoptions",{"_index":165,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["iscpfconstraint",{"_index":162,"title":{"classes/IsCPFConstraint.html":{}},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"coverage.html":{}}}],["isglobal",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isnotempty({message",{"_index":89,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isphonenumber",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["isphonenumber('br",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":399,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":407,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["length(11",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["license",{"_index":413,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":389,"title":{},"body":{"index.html":{}}}],["literal",{"_index":200,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["load",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["metadata",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":349,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":388,"title":{},"body":{"index.html":{}}}],["mode",{"_index":378,"title":{},"body":{"index.html":{}}}],["model",{"_index":297,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":220,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":286,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":402,"title":{},"body":{"index.html":{}}}],["msg",{"_index":186,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["myśliwiec",{"_index":408,"title":{},"body":{"index.html":{}}}],["name",{"_index":124,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["necessário",{"_index":90,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["nest",{"_index":366,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":412,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":128,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":207,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":141,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":120,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["node.js",{"_index":357,"title":{},"body":{"index.html":{}}}],["nome",{"_index":85,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["npm",{"_index":371,"title":{},"body":{"index.html":{}}}],["number",{"_index":304,"title":{},"body":{"injectables/UsersService.html":{}}}],["não",{"_index":180,"title":{},"body":{"classes/FindOneParams.html":{}}}],["o",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["object",{"_index":166,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"classes/SuccessFindOneDto.html":{}}}],["object.constructor",{"_index":169,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["observable",{"_index":127,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["one",{"_index":177,"title":{},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["one.dto",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["one.dto.ts",{"_index":198,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"coverage.html":{}}}],["one.dto.ts:4",{"_index":202,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["one.dto.ts:5",{"_index":201,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["one.dto.ts:7",{"_index":199,"title":{},"body":{"classes/SuccessFindOneDto.html":{}}}],["open",{"_index":390,"title":{},"body":{"index.html":{}}}],["optional",{"_index":125,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":170,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"modules/UsersModule.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":334,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":123,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{}}}],["params.dto",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["params.dto.ts",{"_index":178,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["params.dto.ts:18",{"_index":182,"title":{},"body":{"classes/FindOneParams.html":{}}}],["partialtype",{"_index":206,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":210,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["patch",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["pipe(catcherror(err",{"_index":140,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["please",{"_index":400,"title":{},"body":{"index.html":{}}}],["post",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@useinterceptors(errorsinterceptor",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":309,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":380,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":356,"title":{},"body":{"index.html":{}}}],["project",{"_index":391,"title":{},"body":{"index.html":{}}}],["promise",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["prop",{"_index":212,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":83,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{}}}],["propertyname",{"_index":167,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["read",{"_index":401,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["registerdecorator",{"_index":156,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["remove",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":279,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":317,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":369,"title":{},"body":{"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":291,"title":{},"body":{"modules/UsersModule.html":{}}}],["ret.__v",{"_index":294,"title":{},"body":{"modules/UsersModule.html":{}}}],["ret._id",{"_index":293,"title":{},"body":{"modules/UsersModule.html":{}}}],["ret.id",{"_index":292,"title":{},"body":{"modules/UsersModule.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":375,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":131,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":133,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["scalable",{"_index":361,"title":{},"body":{"index.html":{}}}],["schema",{"_index":217,"title":{},"body":{"classes/User.html":{}}}],["schemafactory",{"_index":218,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":225,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":285,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":362,"title":{},"body":{"index.html":{}}}],["side",{"_index":363,"title":{},"body":{"index.html":{}}}],["sobrenome",{"_index":86,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":394,"title":{},"body":{"index.html":{}}}],["src/.../cpf.decorator.ts",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":423,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/cpf.decorator.ts",{"_index":146,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/cpf.decorator.ts:15",{"_index":184,"title":{},"body":{"classes/IsCPFConstraint.html":{}}}],["src/users/cpf.decorator.ts:34",{"_index":151,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{}}}],["src/users/cpf.decorator.ts:37",{"_index":155,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{}}}],["src/users/dto/create",{"_index":81,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/find",{"_index":176,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["src/users/dto/status",{"_index":185,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/sucess",{"_index":196,"title":{},"body":{"classes/SuccessFindOneDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":205,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":211,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":214,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":215,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":216,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":213,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:17",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":283,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":295,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":300,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":301,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":303,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":306,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":305,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":298,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/validations.interceptor.ts",{"_index":116,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/users/validations.interceptor.ts:14",{"_index":122,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["start",{"_index":376,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":379,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":381,"title":{},"body":{"index.html":{}}}],["started",{"_index":355,"title":{"index.html":{}},"body":{}}],["starter",{"_index":368,"title":{},"body":{"index.html":{}}}],["statements",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["statuscreateuserdto",{"_index":134,"title":{"classes/StatusCreateUserDto.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"classes/StatusCreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["statuscreateuserdto(false",{"_index":143,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["statuscreateuserdto(true",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":404,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["success",{"_index":187,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["successfindonedto",{"_index":195,"title":{"classes/SuccessFindOneDto.html":{}},"body":{"classes/SuccessFindOneDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["successfindonedto(true",{"_index":276,"title":{},"body":{"controllers/UsersController.html":{}}}],["sucesso",{"_index":271,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":395,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":415,"title":{},"body":{"modules.html":{}}}],["table",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":168,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["telefone",{"_index":87,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["telefone'})@length(11",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ter",{"_index":97,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["test",{"_index":384,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":387,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":386,"title":{},"body":{"index.html":{}}}],["tests",{"_index":383,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":393,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.msg",{"_index":194,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["this.success",{"_index":193,"title":{},"body":{"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{}}}],["this.usermodel(createuserdto",{"_index":312,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":315,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":272,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(cpf",{"_index":173,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["this.usersservice.findone(params.cpf",{"_index":275,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":280,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":278,"title":{},"body":{"controllers/UsersController.html":{}}}],["throwerror",{"_index":130,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["touch",{"_index":405,"title":{},"body":{"index.html":{}}}],["transform",{"_index":289,"title":{},"body":{"modules/UsersModule.html":{}}}],["true",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["twitter",{"_index":411,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"classes/StatusCreateUserDto.html":{},"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":421,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":208,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":367,"title":{},"body":{"index.html":{}}}],["um",{"_index":91,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["unit",{"_index":382,"title":{},"body":{"index.html":{}}}],["update",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":277,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":316,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":204,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["useinterceptors",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(errorsinterceptor",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":203,"title":{"classes/User.html":{}},"body":{"classes/SuccessFindOneDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":137,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/SuccessFindOneDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":82,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/StatusCreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":191,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":189,"title":{},"body":{"classes/StatusCreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":287,"title":{},"body":{"modules/UsersModule.html":{}}}],["userdocument",{"_index":221,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":299,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel:model",{"_index":310,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":284,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":161,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":224,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.set('tojson",{"_index":288,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscontroller",{"_index":226,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":41,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":150,"title":{"injectables/UsersService.html":{}},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["validate",{"_index":147,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validate(cpf",{"_index":152,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validationarguments",{"_index":154,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validationoptions",{"_index":157,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{},"miscellaneous/functions.html":{}}}],["validations.interceptor",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ExistsCPFConstraint.html":{},"classes/FindOneParams.html":{},"classes/IsCPFConstraint.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":158,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["validatorconstraintinterface",{"_index":159,"title":{},"body":{"injectables/ExistsCPFConstraint.html":{},"classes/IsCPFConstraint.html":{}}}],["value",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":424,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":377,"title":{},"body":{"index.html":{}}}],["website",{"_index":409,"title":{},"body":{"index.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["writeconcern",{"_index":222,"title":{},"body":{"classes/User.html":{}}}],["yes",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":398,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config';\nimport configuration from '../config/configuration';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports:[\n    ConfigModule.forRoot({\n      load: [configuration],\n      envFilePath: [\n        // '.env.local',\n        // '.env',\n        // '.env.development.local',\n        // '.env.development'\n        '.env.test.local',\n        '.env.test'\n      ],\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('mongourl'),\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                nome\n                            \n                            \n                                sobrenome\n                            \n                            \n                                telefone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um CPF'})@Length(11, 11, {message: 'O CPF deve ter 11 dígitos'})@IsCPF({message: 'CPF inválido'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um nome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sobrenome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um sobrenome'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telefone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um telefone'})@Length(11, 11, {message: 'O telefone deve ter 11 dígitos'})@IsPhoneNumber('BR', {message: 'Telefone Inválido'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber, Length } from 'class-validator';\nimport { IsCPF } from '../cpf.decorator';\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({\n        message: 'É necessário um nome',\n    })\n    nome: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um sobrenome',\n    })\n    sobrenome: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um telefone',\n    })\n    @Length(11, 11, {  \n        message: 'O telefone deve ter 11 dígitos'\n    })\n    @IsPhoneNumber('BR',{\n        message: 'Telefone Inválido'\n    })\n    telefone: string;\n\n    @IsNotEmpty({\n        message: 'É necessário um CPF',\n    })\n    @Length(11, 11, {  \n        message: 'O CPF deve ter 11 dígitos'\n    })\n    @IsCPF({\n        message: 'CPF inválido',\n    })\n    cpf: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validations.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/users/validations.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    BadRequestException,\n  } from '@nestjs/common';\n  import { Observable, throwError } from 'rxjs';\n  import { catchError } from 'rxjs/operators';\nimport { StatusCreateUserDto } from './dto/status-create-user.dto';\n  \n  @Injectable()\n  export class ErrorsInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        \n      return next\n        .handle()\n        .pipe(catchError(err => throwError(\n          new BadRequestException(new StatusCreateUserDto(false, err.response.message))\n        )));\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistsCPFConstraint.html":{"url":"injectables/ExistsCPFConstraint.html","title":"injectable - ExistsCPFConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExistsCPFConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/cpf.decorator.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/cpf.decorator.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(CPF: string, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/users/cpf.decorator.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CPF\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    registerDecorator,\n    ValidationOptions,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n    ValidationArguments,\n  } from 'class-validator';\n\nimport { cpf } from 'cpf-cnpj-validator'; \nimport { UsersService } from './users.service';\nimport {Injectable} from '@nestjs/common';\n\n@ValidatorConstraint({ async: true })\nexport class IsCPFConstraint implements ValidatorConstraintInterface {\n  validate(CPF: any, args: ValidationArguments) {\n    return cpf.isValid(CPF);\n  }\n}\n\nexport function IsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsCPFConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ async: true })\n@Injectable()\nexport class ExistsCPFConstraint implements ValidatorConstraintInterface {\n  constructor(private readonly usersService: UsersService){}\n\n  async validate(CPF: string, args: ValidationArguments) {\n    return !!(await this.usersService.findOne(CPF));\n  }\n}\n\nexport function ExistsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: ExistsCPFConstraint,\n    });\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneParams.html":{"url":"classes/FindOneParams.html","title":"class - FindOneParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-one-params.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'É necessário um CPF'})@Length(11, 11, {message: 'O CPF deve ter 11 dígitos'})@IsCPF({message: 'CPF inválido'})@ExistsCPF({message: 'CPF não cadastrado'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/find-one-params.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber, Length } from 'class-validator';\nimport { IsCPF, ExistsCPF } from '../cpf.decorator';\n\nexport class FindOneParams {\n\n    @IsNotEmpty({\n        message: 'É necessário um CPF',\n    })\n    @Length(11, 11, {  \n        message: 'O CPF deve ter 11 dígitos'\n    })\n    @IsCPF({\n        message: 'CPF inválido',\n    })\n    @ExistsCPF({\n        message: 'CPF não cadastrado',\n    })\n    cpf: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsCPFConstraint.html":{"url":"classes/IsCPFConstraint.html","title":"class - IsCPFConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsCPFConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/cpf.decorator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(CPF: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/users/cpf.decorator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CPF\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    registerDecorator,\n    ValidationOptions,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n    ValidationArguments,\n  } from 'class-validator';\n\nimport { cpf } from 'cpf-cnpj-validator'; \nimport { UsersService } from './users.service';\nimport {Injectable} from '@nestjs/common';\n\n@ValidatorConstraint({ async: true })\nexport class IsCPFConstraint implements ValidatorConstraintInterface {\n  validate(CPF: any, args: ValidationArguments) {\n    return cpf.isValid(CPF);\n  }\n}\n\nexport function IsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsCPFConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ async: true })\n@Injectable()\nexport class ExistsCPFConstraint implements ValidatorConstraintInterface {\n  constructor(private readonly usersService: UsersService){}\n\n  async validate(CPF: string, args: ValidationArguments) {\n    return !!(await this.usersService.findOne(CPF));\n  }\n}\n\nexport function ExistsCPF(validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: ExistsCPFConstraint,\n    });\n  };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusCreateUserDto.html":{"url":"classes/StatusCreateUserDto.html","title":"class - StatusCreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusCreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/status-create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                msg\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success, msg)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/status-create-user.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/status-create-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/status-create-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatusCreateUserDto {\n    success: boolean;\n    msg: string[]\n    \n    constructor(success,msg) {\n        this.success = success;\n        this.msg = msg;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessFindOneDto.html":{"url":"classes/SuccessFindOneDto.html","title":"class - SuccessFindOneDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessFindOneDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sucess-find-one.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                msg\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success, msg)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/sucess-find-one.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/sucess-find-one.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/sucess-find-one.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from \"./create-user.dto\";\n\nexport class SuccessFindOneDto {\n    success: boolean;\n    msg: {\n        user: object\n    }\n    \n    constructor(success, msg) {\n        this.success = success;\n        this.msg = msg;\n    }   \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                nome\n                            \n                            \n                                sobrenome\n                            \n                            \n                                telefone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sobrenome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telefone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nexport type UserDocument = User & Document;\n\n@Schema({\n  writeConcern: {},\n})\nexport class User {\n\n  @Prop()\n  nome: string;\n\n  @Prop()\n  sobrenome: string;\n\n  @Prop()\n  telefone: string;\n\n  @Prop()\n  cpf: string;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(params: FindOneParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':cpf')@UseInterceptors(ErrorsInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindOneParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ErrorsInterceptor } from './validations.interceptor';\nimport { StatusCreateUserDto } from './dto/status-create-user.dto';\nimport { FindOneParams } from './dto/find-one-params.dto';\nimport { SuccessFindOneDto } from './dto/sucess-find-one.dto';\n\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @UseInterceptors(ErrorsInterceptor)\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    await (this.usersService.create(createUserDto))\n    return new StatusCreateUserDto(true, ['Usuário criado com sucesso!'])\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':cpf')\n  @UseInterceptors(ErrorsInterceptor)\n  async findOne(@Param() params: FindOneParams) {\n    const user = await this.usersService.findOne(params.cpf);\n    return  new SuccessFindOneDto(true, { user });\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nExistsCPFConstraint\n\nExistsCPFConstraint\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nExistsCPFConstraint->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExistsCPFConstraint\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { ExistsCPFConstraint } from './cpf.decorator';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          UserSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return UserSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [UsersController],\n  providers: [ExistsCPFConstraint, UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel:Model) {}\n\n  async create(createUserDto: CreateUserDto){\n    const createdUser = new this.userModel(createUserDto);\n    return await createdUser.save()\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  async findOne(cpf: string) {\n    return await this.userModel.findOne({ cpf });\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            class\n            IsCPFConstraint\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            injectable\n            ExistsCPFConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            function\n            ExistsCPF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/cpf.decorator.ts\n            \n            function\n            IsCPF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/find-one-params.dto.ts\n            \n            class\n            FindOneParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/status-create-user.dto.ts\n            \n            class\n            StatusCreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/sucess-find-one.dto.ts\n            \n            class\n            SuccessFindOneDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/validations.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            mongoose : ^5.12.8\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ExistsCPF   (src/.../cpf.decorator.ts)\n                        \n                        \n                            IsCPF   (src/.../cpf.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/users/cpf.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ExistsCPF\n                        \n                        \n                    \n                \n            \n            \n                \nExistsCPF(validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IsCPF\n                        \n                        \n                    \n                \n            \n            \n                \nIsCPF(validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nExistsCPFConstraint\n\nExistsCPFConstraint\n\nUsersModule -->\n\nExistsCPFConstraint->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
