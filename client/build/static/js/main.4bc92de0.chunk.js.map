{"version":3,"sources":["components/User.tsx","components/AddUser.tsx","store/actionTypes.ts","store/actionCreators.ts","App.tsx","reportWebVitals.ts","store/reducer.ts","index.tsx"],"names":["User","user","removeUser","dispatch","useDispatch","deleteUser","React","article","className","nome","sobrenome","onClick","AddUser","saveUser","setUser","handleUserData","e","currentTarget","id","value","onSubmit","preventDefault","type","placeholder","onChange","disabled","undefined","ADD_USER","REMOVE_USER","simulateHttpRequest","actionTypes","action","setTimeout","App","users","useSelector","state","shallowEqual","addUser","map","cpf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","telefone","reducer","newUser","concat","updatedUsers","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bc92de0.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { useDispatch } from \"react-redux\"\n\ntype Props = {\n  user: IUser\n  removeUser: (user: IUser) => void\n}\n\nexport const User: React.FC<Props> = ({ user, removeUser }) => {\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const deleteUser = React.useCallback(\n    (article: IUser) => dispatch(removeUser(article)),\n    [dispatch, removeUser]\n  )\n\n  return (\n    <div className=\"User\">\n      <div>\n        <h1>{`${user.nome} ${user.sobrenome}`}</h1>\n      </div>\n      <button onClick={() => deleteUser(user)}>Delete</button>\n    </div>\n  )\n}","import * as React from \"react\"\n\ntype Props = {\n  saveUser: (user: IUser | any) => void\n}\n\nexport const AddUser: React.FC<Props> = ({ saveUser }) => {\n  const [user, setUser] = React.useState<IUser | {}>()\n\n  const handleUserData = (e: React.FormEvent<HTMLInputElement>) => {\n    setUser({\n      ...user,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n\n  const addNewUser= (e: React.FormEvent) => {\n    e.preventDefault()\n    saveUser(user)\n  }\n\n  return (\n    <form onSubmit={addNewUser} className=\"Add-user\">\n      <input\n        type=\"text\"\n        id=\"nome\"\n        placeholder=\"Nome\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"sobrenome\"\n        placeholder=\"Sobrenome\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"telefone\"\n        placeholder=\"Telefone\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"cpf\"\n        placeholder=\"cpf\"\n        onChange={handleUserData}\n      />\n      <button disabled={user === undefined ? true : false}>\n        Add User\n      </button>\n    </form>\n  )\n}","export const ADD_USER= \"ADD_USER\"\nexport const REMOVE_USER= \"REMOVE_USER\"\nexport const UPDATE_USER= \"UPDATE_USER\"\n","import * as actionTypes from \"./actionTypes\"\n\nexport function addUser(user: IUser) {\n    const action: UserAction = {\n        type: actionTypes.ADD_USER,\n        user,\n    }\n    return simulateHttpRequest(action)\n}\n\nexport function removeUser(user: IUser) {\n    const action: UserAction = {\n        type: actionTypes.REMOVE_USER,\n        user,\n    }\n    return simulateHttpRequest(action)\n}\n\nexport function updateUser(user: IUser) {\n    const action: UserAction = {\n        type: actionTypes.UPDATE_USER,\n        user,\n    }\n    return simulateHttpRequest(action)\n}\n\nexport function simulateHttpRequest(action: UserAction) {\n    return (dispatch: DispatchType) => {\n        setTimeout(() => {\n        dispatch(action)\n        }, 200)\n    }\n}","import * as React from \"react\"\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport { User } from \"./components/User\"\nimport { AddUser } from \"./components/AddUser\"\nimport { addUser, removeUser } from \"./store/actionCreators\"\nimport { Dispatch } from \"redux\"\nimport \"./App.css\"\n\nconst App: React.FC = () => {\n  const users: readonly IUser[] = useSelector(\n    (state: UserState) => state.users,\n    shallowEqual\n  )\n\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const saveUser = React.useCallback(\n    (user: IUser) => dispatch(addUser(user)),\n    [dispatch]\n  )\n\n  return (\n    <main>\n      <h1>Usuários</h1>\n      <AddUser saveUser={saveUser} />\n      {users.map((user: IUser) => (\n        <User\n          key={user.cpf}\n          user={user}\n          removeUser={removeUser}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"./actionTypes\"\n\nconst initialState: UserState = {\n  users: [\n    {\n        nome: \"João\",\n        sobrenome: \"Carlos\",\n        telefone: \"11968552211\",\n        cpf: \"08438794912\"\n      },\n      {\n        nome: \"Aarão\",\n        sobrenome: \"Melo\",\n        telefone: \"11977808883\",\n        cpf: \"00108240223\"\n      }\n  ],\n}\n\nconst reducer = (\n    state: UserState = initialState,\n    action: UserAction\n  ): UserState => {\n    switch (action.type) {\n\n      case actionTypes.ADD_USER:\n        const newUser: IUser = {\n            nome: action.user.nome,\n            sobrenome: action.user.sobrenome,\n            telefone: action.user.telefone,\n            cpf: action.user.cpf,\n        }\n        return {\n          ...state,\n          users: state.users.concat(newUser),\n        }\n\n      case actionTypes.REMOVE_USER:\n        const updatedUsers: IUser[] = state.users.filter(\n          user => user.cpf !== action.user.cpf\n        )\n        return {\n          ...state,\n          users: updatedUsers,\n        }\n\n    }\n    return state\n  }\n  \n  export default reducer;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, Store } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport reducer from \"./store/reducer\"\n\nconst store: Store<UserState, UserAction> & {\n  dispatch: DispatchType\n} = createStore(reducer, applyMiddleware(thunk))\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}