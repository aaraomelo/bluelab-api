{"version":3,"sources":["components/User.tsx","components/AddUser.tsx","components/Messages.tsx","components/SearchUser.tsx","store/actionTypes.ts","config.ts","store/reducer.ts","store/index.ts","services/user.service.ts","services/auth.service.ts","store/actionCreators.ts","components/AuthUser.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["User","user","removeUser","dispatch","useDispatch","deleteUser","React","a","className","nome","sobrenome","onClick","AddUser","saveUser","setUser","handleUserData","e","currentTarget","id","value","onSubmit","preventDefault","type","placeholder","onChange","disabled","undefined","Messages","message","style","backgroundColor","success","msg","map","SearchUser","searchUser","infoUSer","setInfoUSer","userFound","useSelector","state","shallowEqual","LOAD_USERS","ADD_USER","REMOVE_USER","REMOVE_USER_ERROR","ADD_USERS_ERROR","AUTH_USER","AUTH_USER_ERROR","FIND_USER","FIND_USER_ERROR","config","process","initialState","users","auth","token","telefone","cpf","reducer","action","actionTypes","localStorage","setItem","newUser","concat","updatedUsers","filter","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","usersService","Authorization","getState","url","getAllUsers","axios","get","this","then","response","Promise","resolve","data","catch","error","reject","addUser","post","delete","headers","findUser","authService","login","credentials","loadUsers","authUser","info","console","log","AuthUser","setCredentials","handleCredentilasData","App","authenticateUser","findingUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5277810.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { useDispatch } from \"react-redux\"\n\ntype Props = {\n  user: IUser\n  removeUser: (user: IUser) => void\n}\n\nexport const User: React.FC<Props> = ({ user, removeUser }) => {\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const deleteUser = React.useCallback(\n    async (user: IUser) => dispatch(await removeUser(user)),\n    [dispatch, removeUser]\n  )\n\n  return (\n    <div className=\"User\">\n      <div>\n        <h1>{`${user.nome} ${user.sobrenome}`}</h1>\n      </div>\n      <button onClick={() => deleteUser(user)}>Delete</button>\n    </div>\n  )\n}","import * as React from \"react\"\n\ntype Props = {\n  saveUser: (user: IUser | any) => void\n}\n\nexport const AddUser: React.FC<Props> = ({ saveUser }) => {\n  const [user, setUser] = React.useState<IUser | {}>()\n\n  const handleUserData = (e: React.FormEvent<HTMLInputElement>) => {\n    setUser({\n      ...user,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n\n  const addNewUser= (e: React.FormEvent) => {\n    e.preventDefault()\n    saveUser(user)\n  }\n\n  return (\n    <form onSubmit={addNewUser} className=\"Add-user\">\n      <input\n        type=\"text\"\n        id=\"nome\"\n        placeholder=\"Nome\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"sobrenome\"\n        placeholder=\"Sobrenome\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"telefone\"\n        placeholder=\"Telefone\"\n        onChange={handleUserData}\n      />\n      <input\n        type=\"text\"\n        id=\"cpf\"\n        placeholder=\"cpf\"\n        onChange={handleUserData}\n      />\n      <button disabled={user === undefined ? true : false}>\n        Adcionar\n      </button>\n    </form>\n  )\n}","import * as React from \"react\"\n\ntype Props = {\n  message: StatusCreateUser\n}\n\nexport const Messages: React.FC<Props> = ({ message }) => {\n  return (\n    <div className=\"Error\" style={{backgroundColor: message.success ? 'yellowgreen':'#e06a6a' }}>\n      <div>\n        {message.msg.map((msg: string)=>( \n          <h2 key={msg}>{msg}</h2>\n        ))}\n      </div>\n    </div>\n  )\n}","import * as React from \"react\"\nimport { shallowEqual, useSelector } from \"react-redux\"\n\ntype Props = {\n  searchUser: (credentials: Credentials | any) => void\n}\n\nexport const SearchUser: React.FC<Props> = ({ searchUser }) => {\n\n  const [infoUSer, setInfoUSer] = React.useState<Credentials | {}>()\n\n  const userFound: IUser = useSelector(\n    (state: UserState) => state.userFound,\n    shallowEqual\n  )\n\n  const handleInfoUserData = (e: React.FormEvent<HTMLInputElement>) => {\n    setInfoUSer({\n      ...infoUSer,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n\n  const findUser= (e: React.FormEvent) => {\n    e.preventDefault()\n    searchUser(infoUSer)\n  }\n\n  return (\n    <div>\n      <form onSubmit={findUser} className=\"Add-user\">\n        <input\n          type=\"text\"\n          id=\"cpf\"\n          placeholder=\"CPF\"\n          onChange={handleInfoUserData}\n        />\n        <button disabled={infoUSer === undefined ? true : false}>\n          Buscar\n        </button>\n      </form>\n      <div className=\"User\">\n        <div>\n          <h1>{`${userFound.nome} ${userFound.sobrenome}`}</h1>\n        </div>\n      </div>\n    </div>\n  )\n}","export const LOAD_USERS= \"LOAD_USERS\"\nexport const ADD_USER= \"ADD_USER\"\nexport const REMOVE_USER= \"REMOVE_USER\"\nexport const REMOVE_USER_ERROR= \"REMOVE_USER_ERROR\"\nexport const UPDATE_USER= \"UPDATE_USER\"\nexport const ADD_USERS_ERROR= \"ADD_USERS_ERROR\"\nexport const AUTH_USER= \"AUTH_USER\"\nexport const AUTH_USER_ERROR= \"AUTH_USER_ERROR\"\nexport const FIND_USER= \"FIND_USER\"\nexport const FIND_USER_ERROR = \"FIND_USER_ERROR\"","\nexport const config = {\n    production: false,\n    baseurl:  process.env.REACT_APP_BASE_URL,\n    prefix: 'api/v1',\n  };","import * as actionTypes from \"./actionTypes\"\n\nconst initialState: UserState = {\n  users: [],\n  message: { success: true, msg:[] },\n  auth: false,\n  token: '',\n  userFound:{ \n    nome: '',\n    sobrenome: '',\n    telefone: '',\n    cpf: ''\n  }\n}\n\nconst reducer = (\n    state: UserState = initialState,\n    action: any\n  ): UserState => {\n    switch (action.type) {\n      case actionTypes.AUTH_USER:\n        localStorage.setItem('token', action.token)\n        return {\n          ...state,\n          auth: true,\n          token: action.token,\n          message: { success: true, msg:['Autenticado com sucesso!'] },\n        }\n      case actionTypes.LOAD_USERS:\n        return {\n          ...state,\n          users: action.users,\n        }\n\n      case actionTypes.ADD_USER:\n        const newUser: IUser = {\n            nome: action.user.nome,\n            sobrenome: action.user.sobrenome,\n            telefone: action.user.telefone,\n            cpf: action.user.cpf,\n        }\n        return {\n          ...state,\n          users: state.users.concat(newUser),\n          message: { success: true, msg:['Usuário cadastrado com sucesso!'] },\n        }\n        \n      case actionTypes.ADD_USERS_ERROR:\n        return {\n          ...state,\n          message: action.message,\n        }\n\n      case actionTypes.AUTH_USER_ERROR:\n        return {\n          ...state,\n          message: action.message,\n        }\n\n      case actionTypes.REMOVE_USER:\n        const updatedUsers: IUser[] = state.users.filter(\n          user => user.cpf !== action.user.cpf\n        )\n        return {\n          ...state,\n          users: updatedUsers,\n          message: {success: true, msg:['Usuário removido com sucesso!'] }\n        }\n      case actionTypes.REMOVE_USER_ERROR:\n        return {\n          ...state,\n          message: action.message,\n        }\n      case actionTypes.FIND_USER:\n        return {\n          ...state,\n          userFound: action.user,\n          message: {success: true, msg:['Usuário encontrado!'] }\n        }\n\n      case actionTypes.FIND_USER_ERROR:\n        return {\n          ...state,\n          message: action.message\n        }\n\n    }\n    return state\n  }\n  \n  export default reducer;\n  ","import { applyMiddleware, createStore, Store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"\nimport reducer from \"./reducer\"\nimport logger from \"redux-logger\"\n\nconst store: Store<UserState, UserAction> & {\n    dispatch: DispatchType\n  } = createStore(reducer, composeWithDevTools(applyMiddleware(logger ,thunk)))\n\nexport default store;","import { config } from '../config';\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport store from '../store'\n\n\nconst usersService = {\n  Authorization: ()=>({\n      Authorization: `Bearer ${store.getState().token}`,\n  }),\n\n  url: `${config.baseurl}${config.prefix}/users`,\n\n  getAllUsers(): Promise<IUser[]> {\n    return axios\n      .get(this.url)\n      .then((response: AxiosResponse<IUser[]>) => {\n        return Promise.resolve(response.data);\n      })\n      .catch((error: AxiosError) => {\n        return Promise.reject(error.response?.data.message);\n      });\n  },\n\n  addUser(user: IUser): Promise<StatusCreateUser> {\n    return axios\n      .post(this.url, user)\n      .then((response: AxiosResponse<StatusCreateUser>) => {\n        return Promise.resolve(response.data);\n      })\n      .catch((error: AxiosError) => {\n        return Promise.reject(error.response?.data);\n      });\n  },\n\n  removeUser(cpf: string): Promise<StatusCreateUser> {\n    return axios\n      .delete(`${this.url}/${cpf}`, { data:{}, headers: {...this.Authorization()} })\n      .then((response: AxiosResponse<StatusCreateUser>) => {\n        return Promise.resolve(response.data);\n      })\n      .catch((error: AxiosError) => {\n        return Promise.reject(error.response?.data);\n      });\n  },\n\n  findUser(cpf: string): Promise<any> {\n    return axios\n      .get(`${this.url}/${cpf}`)\n      .then((response: AxiosResponse<any>) => {\n        return Promise.resolve(response.data);\n      })\n      .catch((error: AxiosError) => {\n        return Promise.reject(error.response?.data);\n      });\n  },\n\n};\nexport default usersService","import { config } from '../config';\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nconst authService = {\n\n  url: `${config.baseurl}${config.prefix}/auth`,\n\n  login(credentials: Credentials): Promise<Token> {\n    return axios\n      .post(`${this.url}/login`, credentials)\n      .then((response: AxiosResponse<Token>) => {\n        return Promise.resolve(response.data);\n      })\n      .catch((error: AxiosError) => {\n        return Promise.reject(error.response?.data);\n      });\n  },\n\n};\nexport default authService","import * as actionTypes from \"./actionTypes\"\nimport usersService from \"../services/user.service\"\nimport authService from \"../services/auth.service\"\n    \nexport async function loadUsers() {\n    const users = await usersService.getAllUsers()\n    const action: LoadUsersAction = {\n        type: actionTypes.LOAD_USERS,\n        users\n    }\n    return action;\n}\n\nexport async function addUser(user: IUser) {\n\n    return await usersService.addUser(user)\n        .then(() => {\n            const action: UserAction = {\n                type: actionTypes.ADD_USER,\n                user,\n            }\n            return action;\n        })\n        .catch((message) => {\n            const action: AddUsersErrorAction = {\n                type: actionTypes.ADD_USERS_ERROR,\n                message,\n            }\n            return action;\n        })\n}\n\nexport async function removeUser(user: IUser) {\n    return await usersService.removeUser(user.cpf)\n        .then(() => {\n            const action: UserAction = {\n                type: actionTypes.REMOVE_USER,\n                user,\n            }\n            return action\n        })\n        .catch(()=>{\n            const action: RemoveUserErrorAction = {\n                type: actionTypes.REMOVE_USER_ERROR,\n                message: {success: false, msg:['É necessário autenticar!'] },\n            }\n            return action\n            \n        })\n}\n\nexport function updateUser(user: IUser) {\n    const action: UserAction = {\n        type: actionTypes.UPDATE_USER,\n        user,\n    }\n    return action\n}\n\n\nexport async function authUser(credentials: Credentials) {\n    return await authService.login(credentials)\n    .then((response) => {\n        const action: AuthAction = {\n            type: actionTypes.AUTH_USER,\n            token: response.token,\n        }\n        return action;\n    })\n    .catch(()=>{\n        const action: AuthErrorAction = {\n            type: actionTypes.AUTH_USER_ERROR,\n            message: {success: false, msg:['Não autorizado'] }\n        }\n        return action;\n    })\n}\n\nexport async function findUser(info: findUser) {\n    return await usersService.findUser(info.cpf)\n    .then((response)=> {\n        const action: findUserAction = {\n            type: actionTypes.FIND_USER,\n            user: response.msg.user\n        }\n        return action\n    })\n    .catch((error) => {\n        console.log(error);\n        const action: findUserErrorAction = {\n            type: actionTypes.FIND_USER_ERROR,\n            message: error\n        }\n        return action\n    })\n}\n\n","import * as React from \"react\"\n\ntype Props = {\n  authUser: (credentials: Credentials | any) => void\n}\n\nexport const AuthUser: React.FC<Props> = ({ authUser }) => {\n  const [credentials, setCredentials] = React.useState<Credentials | {}>()\n\n  const handleCredentilasData = (e: React.FormEvent<HTMLInputElement>) => {\n    setCredentials({\n      ...credentials,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n\n  const addCredentials= (e: React.FormEvent) => {\n    e.preventDefault()\n    authUser(credentials)\n  }\n\n  return (\n    <form onSubmit={addCredentials} className=\"Add-user\">\n      <input\n        type=\"text\"\n        id=\"cpf\"\n        placeholder=\"CPF\"\n        onChange={handleCredentilasData}\n      />\n      <input\n        type=\"text\"\n        id=\"telefone\"\n        placeholder=\"telefone\"\n        onChange={handleCredentilasData}\n      />\n      <button disabled={credentials === undefined ? true : false}>\n        Autenticar\n      </button>\n    </form>\n  )\n}","import * as React from \"react\"\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport { User } from \"./components/User\"\nimport { AddUser } from \"./components/AddUser\"\nimport { Messages } from \"./components/Messages\"\nimport { SearchUser } from \"./components/SearchUser\"\n\nimport { Container, Row, Col } from 'react-grid-system';\nimport { addUser, removeUser, loadUsers, authUser, findUser } from \"./store/actionCreators\"\nimport { Dispatch } from \"redux\"\nimport \"./App.css\"\nimport { AuthUser } from \"./components/AuthUser\"\n\nconst App: React.FC = () => {\n  const users: readonly IUser[] = useSelector(\n    (state: UserState) => state.users,\n    shallowEqual\n  )\n\n  const message: StatusCreateUser = useSelector(\n    (state: UserState) => state.message,\n    shallowEqual\n  )\n\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const saveUser = React.useCallback(\n    async (user: IUser) => dispatch(await addUser(user)),\n    [dispatch]\n  )\n\n  const authenticateUser = React.useCallback(\n    async (credentials: Credentials) => dispatch(await authUser(credentials)),\n    [dispatch]\n  )\n\n  const findingUser = React.useCallback(\n    async (info: findUser) => dispatch(await findUser(info)),\n    [dispatch]\n  )\n\n  React.useEffect(() => {\n    (async () => dispatch(await loadUsers()))()\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Container>\n        <Row>\n        <Row>\n            <Col>\n              <h1>Adicione um usuário</h1>\n              <AddUser saveUser={saveUser} />\n            </Col>\n            <Col>\n              <h1>Usuários adicionados</h1>\n              {users.map((user: IUser) => (\n                <User\n                  key={user.cpf}\n                  user={user}\n                  removeUser={removeUser}\n                />\n              ))}\n            </Col>  \n          </Row>\n          <Row>\n            <Col>\n              <h1>Autentique-se</h1>\n              <AuthUser authUser = {authenticateUser}/>\n            </Col>\n            <Col>\n              <h1>Busque um usuário</h1>\n              <SearchUser searchUser = {findingUser}/>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h1>Mensagens</h1>\n              <Messages message={ message } />\n            </Col>\n          </Row>\n          \n        </Row>\n      </Container>\n    </main>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}